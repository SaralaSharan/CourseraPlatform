/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.Activity;
import model.Business;
import model.EmployeeProfile;
import model.Person;
import model.PersonDirectory;
import model.ProfessorProfile;
import model.StudentProfile;
import model.UserAccountDirectory;
import model.UserActivity;
import org.mindrot.jbcrypt.BCrypt;

/**
 *
 * @author saralask
 */
public class ManagePersonsJPanel extends javax.swing.JPanel {

    JPanel CardSequencePanel;
    Business business;

    
    /**
     * Creates new form StudentJpanel
     */
    public ManagePersonsJPanel(Business bz, JPanel jp) {
        CardSequencePanel = jp;
        this.business = bz;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtEmailAddress = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        lblContactNumber = new javax.swing.JLabel();
        txtDefaultPassword = new javax.swing.JTextField();
        txtContactNumber = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        lblAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lblEmailAddress = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblDefaultPassword = new javax.swing.JLabel();
        lblSecondName = new javax.swing.JLabel();
        txtSecondName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        comboBoxRole = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        Back = new javax.swing.JButton();
        Next = new javax.swing.JButton();

        setBackground(new java.awt.Color(203, 231, 229));
        setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N

        txtEmailAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailAddressActionPerformed(evt);
            }
        });

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        lblContactNumber.setText("CONTACT NUMBER:");

        txtContactNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContactNumberActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(23, 65, 68));
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblAddress.setText("ADDRESS:");

        lblEmailAddress.setText("EMAIL ADDRESS:");

        lblFirstName.setText("FIRST NAME:");

        lblID.setText("ID:");

        txtFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstNameActionPerformed(evt);
            }
        });

        lblDefaultPassword.setText("PASSWORD:");

        lblSecondName.setText("SECOND NAME:");

        txtSecondName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSecondNameActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel2.setText("Please add below details");

        lblUserName.setText("USER NAME");

        txtUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserNameActionPerformed(evt);
            }
        });

        comboBoxRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT", "ADMIN", "STUDENT", "PROFESSOR" }));

        jLabel1.setText("ROLE:");

        Back.setBackground(new java.awt.Color(23, 65, 68));
        Back.setForeground(new java.awt.Color(255, 255, 255));
        Back.setText("<< Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        Next.setBackground(new java.awt.Color(23, 65, 68));
        Next.setForeground(new java.awt.Color(255, 255, 255));
        Next.setText("Next >>");
        Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(135, 135, 135)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblEmailAddress)
                                            .addComponent(lblSecondName)
                                            .addComponent(lblFirstName))
                                        .addGap(32, 32, 32)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtSecondName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(218, 218, 218)
                                .addComponent(lblID)))
                        .addGap(0, 121, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblDefaultPassword)
                                        .addGap(38, 38, 38)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnSave)
                                            .addComponent(txtDefaultPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblUserName)
                                        .addGap(37, 37, 37)
                                        .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(148, 148, 148)
                                            .addComponent(jLabel1)
                                            .addGap(37, 37, 37)
                                            .addComponent(comboBoxRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(106, 106, 106)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(lblContactNumber)
                                                .addComponent(lblAddress))
                                            .addGap(37, 37, 37)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtContactNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(Back)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Next, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {comboBoxRole, txtAddress, txtContactNumber, txtDefaultPassword, txtEmailAddress, txtFirstName, txtID, txtSecondName, txtUserName});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Back, Next, btnSave});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel2)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstName)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSecondName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSecondName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmailAddress))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblContactNumber)
                    .addComponent(txtContactNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddress)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblUserName))
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDefaultPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDefaultPassword))
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Back)
                    .addComponent(Next))
                .addContainerGap(96, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtEmailAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailAddressActionPerformed
        
    }//GEN-LAST:event_txtEmailAddressActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        
    }//GEN-LAST:event_txtIDActionPerformed

    private void txtContactNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContactNumberActionPerformed
        
    }//GEN-LAST:event_txtContactNumberActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        boolean flag = false;
        //*************************************** Validation of Empty First Name ***************************************//
                if(txtFirstName.getText().isEmpty()){
                    JOptionPane optionPane = new JOptionPane("FirstName cannot be empty", JOptionPane.ERROR_MESSAGE);
                    JDialog dialog = optionPane.createDialog("Error Message");
                    dialog.setAlwaysOnTop(true);
                    dialog.setVisible(true);
                    flag = true;   
                }
                
                //***************************************Validation of First Name ***************************************//
                
                String name7 = txtFirstName.getText();
                Pattern pattern7 = Pattern.compile("^[a-zA-Z0-9- ]{1,50}$");
                Matcher matcher7 = pattern7.matcher(name7);
                if(!matcher7.matches())
                {
                    JOptionPane.showMessageDialog(this,"Enter a valid Name!");
                    flag = true;
                    txtFirstName.setText("");
                }
                
                //*************************************** Validation of Empty Second Name ***************************************//
                if(txtSecondName.getText().isEmpty()){
                    JOptionPane optionPane = new JOptionPane("Second Name cannot be empty", JOptionPane.ERROR_MESSAGE);
                    JDialog dialog = optionPane.createDialog("Error Message");
                    dialog.setAlwaysOnTop(true);
                    dialog.setVisible(true);
                    flag = true;
                }
                
                //***************************************Validation of Second Name ***************************************//
                
                String name = txtSecondName.getText();
                Pattern pattern = Pattern.compile("^[a-zA-Z0-9- ]{1,50}$");
                Matcher matcher = pattern.matcher(name);
                if(!matcher.matches())
                {
                    JOptionPane.showMessageDialog(this,"Enter a valid Name!");
                    flag = true;
                    txtSecondName.setText("");
                }
                
                //*************************************** Validation of Empty Email Field ***************************************//
                
                if(txtEmailAddress.getText().isEmpty()){
                    JOptionPane optionPane = new JOptionPane(" Email cannot be empty", JOptionPane.ERROR_MESSAGE);
                    JDialog dialog = optionPane.createDialog("Error Message");
                    dialog.setAlwaysOnTop(true);
                    dialog.setVisible(true);
                    flag = true;
                    txtEmailAddress.setText("");
                }
                
                 //***************************************Validation of EmailAddress ***************************************//
                
                String email1 = txtEmailAddress.getText();
                Pattern pattern1 = Pattern.compile("^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$");
                Matcher matcher1 = pattern1.matcher(email1);
                if(!matcher1.matches())
                {
                    JOptionPane.showMessageDialog(this,"Enter a valid Email Address!");
                    flag = true;
                    txtEmailAddress.setText("");
                }
                
                //*************************************** Validation of Empty ContactNumber Field ***************************************//
                if(txtContactNumber.getText().isEmpty()){
                    JOptionPane optionPane = new JOptionPane(" Contact Number cannot be empty", JOptionPane.ERROR_MESSAGE);
                    JDialog dialog = optionPane.createDialog("Error Message");
                    dialog.setAlwaysOnTop(true);
                    dialog.setVisible(true);
                    flag = true;
                    txtContactNumber.setText("");
                }
                
                //*************************************** Validation of Contact Number ***************************************//
                
                String cellPhoneNumber3 = txtContactNumber.getText();
                Pattern pattern3 = Pattern.compile("^[0-9]{10}$");
                Matcher matcher3 = pattern3.matcher(cellPhoneNumber3);
                if(!matcher3.matches())
                {
                    JOptionPane.showMessageDialog(this,"Enter a valid Contact Number!");
                    flag = true;
                    txtContactNumber.setText("");  
                }
                //*************************************** Validation of Password ***************************************//
                String pass = txtDefaultPassword.getText();
                Pattern pattern6 = Pattern.compile("^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$");
                Matcher matcher6 = pattern6.matcher(pass);
                if(!matcher6.matches())
                {
                    JOptionPane.showMessageDialog(this,"Enter a valid Password!");
                    flag = true;
                    txtDefaultPassword.setText("");  
                }
            
        if(flag==false){
        String email = txtEmailAddress.getText();
        String id = txtID.getText();
        String userName = txtUserName.getText();
//        String passwd = txtDefaultPassword.getText();
        String firstName = txtFirstName.getText();
        String lastName = txtSecondName.getText();
        long phNo = Long.parseLong(txtContactNumber.getText());
        String address = txtAddress.getText();
        String role = comboBoxRole.getSelectedItem().toString();
        String hashPassword = BCrypt.hashpw(pass, BCrypt.gensalt());
       
        PersonDirectory personDirectory = business.getPersonDirectory();
        UserAccountDirectory userAccountDirectory = business.getUserAccountDirectory();
        
        
        Person person = personDirectory.newPerson(id);
        if(flag == false){
        person.setEmailAddress(email);
        person.setId(id);
        person.addNewPassword(hashPassword);
        person.setFirstName(firstName);
        person.setLastName(lastName);
        person.setPhoneNo(phNo);
        person.setAddress(address);
        person.setRole(role);
        
        JOptionPane.showMessageDialog(this, "New Person data saved");

        txtFirstName.setText("");
        txtSecondName.setText("");
        txtEmailAddress.setText("");
        txtID.setText("");
        txtUserName.setText("");
        txtDefaultPassword.setText("");
        txtContactNumber.setText("");
        txtAddress.setText("");
        comboBoxRole.setSelectedIndex(0);
        }
        

        if(role.equals("ADMIN")){
            EmployeeProfile employeeProfile = new EmployeeProfile(person);
            business.getEmployeeDirectory().newEmployeeProfile(person);
            userAccountDirectory.newUserAccount(employeeProfile, userName, hashPassword);
            UserActivity userActitvity = new UserActivity("ADMIN", "ONLINE", Activity.NEW_ADMIN_ADDED, new Date());
            business.getUserActivityDirectory().addUserActivity(userActitvity);
        }
        if(role.equals("STUDENT")){
           StudentProfile studentProfile = new StudentProfile(person);
           business.getStudentDirectory().newStudentProfile(person);
           userAccountDirectory.newUserAccount(studentProfile, userName, hashPassword);
           UserActivity userActitvity = new UserActivity("ADMIN", "ONLINE", Activity.NEW_STUDENT_ADDED, new Date());
           business.getUserActivityDirectory().addUserActivity(userActitvity);
        }
        
        if(role.equals("PROFESSOR")){
            ProfessorProfile professorProfile = new ProfessorProfile(person);
            business.getProfessorDirectory().newProfessorProfile(person);
            userAccountDirectory.newUserAccount(professorProfile, userName, hashPassword);
            UserActivity userActitvity = new UserActivity("ADMIN", "ONLINE", Activity.NEW_PROFESSOR_ADDED, new Date());
           business.getUserActivityDirectory().addUserActivity(userActitvity);
        }
        }
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstNameActionPerformed

    private void txtSecondNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSecondNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSecondNameActionPerformed

    private void txtUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNameActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
        //       ((java.awt.CardLayout)CardSequencePanel.getLayout()).show(CardSequencePanel, "IdentifyEventTypes");
    }//GEN-LAST:event_BackActionPerformed

    private void NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextActionPerformed
        // TODO add your handling code here:

        AdministerPersonJPanel mppd = new AdministerPersonJPanel(business, CardSequencePanel);
        CardSequencePanel.add(mppd);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_NextActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton Next;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> comboBoxRole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblContactNumber;
    private javax.swing.JLabel lblDefaultPassword;
    private javax.swing.JLabel lblEmailAddress;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblSecondName;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtContactNumber;
    private javax.swing.JTextField txtDefaultPassword;
    private javax.swing.JTextField txtEmailAddress;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtSecondName;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
